[*]

charset                  = utf-8-bom
insert_final_newline     = true
trim_trailing_whitespace = false

[*.cs]

end_of_line                                                              = crlf
indent_style                                                             = tab

csharp_style_conditional_delegate_call                                   = true : warning
csharp_style_expression_bodied_accessors                                 = true : warning
csharp_style_expression_bodied_constructors                              = true : warning
csharp_style_expression_bodied_indexers                                  = true : warning
csharp_style_expression_bodied_methods                                   = true : warning
csharp_style_expression_bodied_operators                                 = true : warning
csharp_style_expression_bodied_properties                                = true : warning
csharp_style_inlined_variable_declaration                                = true : warning
csharp_style_pattern_matching_over_as_with_null_check                    = true : warning
csharp_style_pattern_matching_over_is_with_cast_check                    = true : warning
csharp_style_throw_expression                                            = true : warning
csharp_style_var_elsewhere                                               = false : warning
csharp_style_var_for_built_in_types                                      = false : warning
csharp_style_var_when_type_is_apparent                                   = false : warning
csharp_new_line_before_catch                                             = true
csharp_new_line_before_else                                              = true
csharp_new_line_before_finally                                           = true
csharp_new_line_before_members_in_anonymous_types                        = true
csharp_new_line_before_members_in_object_initializers                    = true
csharp_new_line_before_open_brace                                        = all
csharp_new_line_between_query_expression_clauses                         = true

csharp_prefer_braces                                                     = false : suggestion
csharp_indent_block_contents                                             = true
csharp_indent_braces                                                     = false
csharp_indent_case_contents                                              = true
csharp_indent_case_contents_when_block                                   = false
csharp_indent_switch_labels                                              = true
csharp_indent_labels                                                     = no_change

csharp_space_after_cast                                                  = true
csharp_space_after_comma                                                 = true
csharp_space_after_dot                                                   = false
csharp_space_after_semicolon_in_for_statement                            = true
csharp_space_before_comma                                                = false
csharp_space_before_dot                                                  = false
csharp_space_before_semicolon_in_for_statement                           = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis        = false
csharp_space_between_method_declaration_parameter_list_parentheses       = true
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
csharp_space_between_method_call_parameter_list_parentheses              = true
csharp_space_between_parentheses                                         = control_flow_statements, expressions
csharp_space_before_open_square_brackets                                 = false
csharp_space_between_empty_square_brackets                               = false
csharp_space_between_square_brackets                                     = true
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_preserve_single_line_statements                                   = false
csharp_preserve_single_line_blocks                                       = true

dotnet_sort_system_directives_first                                      = true
dotnet_style_coalesce_expression                                         = true : warning
dotnet_style_collection_initializer                                      = true : suggestion
dotnet_style_explicit_tuple_names                                        = true : warning
dotnet_style_null_propagation                                            = true : warning
dotnet_style_object_initializer                                          = true : suggestion
dotnet_style_predefined_type_for_locals_parameters_members               = true : warning
dotnet_style_predefined_type_for_member_access                           = false : warning
dotnet_style_qualification_for_event                                     = false : warning
dotnet_style_qualification_for_field                                     = false : warning
dotnet_style_qualification_for_method                                    = false : warning
dotnet_style_qualification_for_property                                  = false : warning

# IInterface

dotnet_naming_rule.interface_rule.symbols                                = all_interfaces
dotnet_naming_rule.interface_rule.style                                  = interface_style
dotnet_naming_rule.interface_rule.severity                               = warning

dotnet_naming_symbols.all_interfaces.applicable_kinds                    = interface
dotnet_naming_symbols.all_interfaces.applicable_accessibilities          = *

dotnet_naming_style.interface_style.required_prefix                      = I
dotnet_naming_style.interface_style.capitalization                       = pascal_case

# _privateField

dotnet_naming_rule.private_field_rule.symbols                            = private_fields
dotnet_naming_rule.private_field_rule.style                              = private_field_style
dotnet_naming_rule.private_field_rule.severity                           = warning

dotnet_naming_symbols.private_fields.applicable_kinds                    = field
dotnet_naming_symbols.private_fields.applicable_accessibilities          = private

dotnet_naming_style.private_field_style.required_prefix                  = _
dotnet_naming_style.private_field_style.capitalization                   = camel_case

# parameters

dotnet_naming_rule.parameter_rule.symbols                                = parameters
dotnet_naming_rule.parameter_rule.style                                  = camel_case_style
dotnet_naming_rule.parameter_rule.severity                               = warning

dotnet_naming_symbols.parameters.applicable_kinds                        = parameter

dotnet_naming_style.camel_case_style.capitalization                      = camel_case

# Type

dotnet_naming_rule.type_rule.symbols                                     = all_types
dotnet_naming_rule.type_rule.style                                       = pascal_case_style
dotnet_naming_rule.type_rule.severity                                    = warning

dotnet_naming_symbols.all_types.applicable_kinds                         = class, struct, enum
dotnet_naming_symbols.all_types.applicable_accessibilities               = *

# async Task SomeMethodAsync

dotnet_naming_rule.async_method_rule.symbols                             = async_methods
dotnet_naming_rule.async_method_rule.style                               = async_method_style
dotnet_naming_rule.async_method_rule.severity                            = suggestion

dotnet_naming_symbols.async_methods.applicable_kinds                     = method
dotnet_naming_symbols.async_methods.applicable_accessibilities           = *
dotnet_naming_symbols.async_methods.required_modifiers                   = async

dotnet_naming_style.async_method_style.required_suffix                   = Async
dotnet_naming_style.async_method_style.capitalization                    = pascal_case

# NonFieldMembers

dotnet_naming_rule.member_rule.symbols                                   = non_field_members
dotnet_naming_rule.member_rule.style                                     = pascal_case_style
dotnet_naming_rule.member_rule.severity                                  = warning

dotnet_naming_symbols.non_field_members.applicable_kinds                 = property, method, event
dotnet_naming_symbols.non_field_members.applicable_accessibilities       = *

dotnet_naming_style.pascal_case_style.capitalization                     = pascal_case
